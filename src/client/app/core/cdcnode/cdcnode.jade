form(class='form' role='form' name='form' novalidate)
  .row
    .col-md-3(class='col-xs-12')
      .form-group(
        class='has-feedback'
        data-ng-class='{\'has-error\': form.name.$dirty && form.name.$error.required, \'has-success\': form.name.$dirty && form.name.$valid}'
      )
        label.control-label(
          for='{{cdcNodeVm.text.name.name}}'
          data-ng-bind='cdcNodeVm.text.name.label'
          data-ng-show='form.name.$pristine || form.name.$valid'
        )
        label.control-label(
          for='{{cdcNodeVm.text.name.name}}'
          data-ng-bind='cdcNodeVm.text.name.validation.required'
          data-ng-show='form.name.$dirty && form.name.$error.required'
        )
        input.form-control(
          type='text'
          id='{{cdcNodeVm.text.name.name}}'
          name='name'
          placeholder='{{cdcNodeVm.text.name.placeholder}}'
          data-ng-model='node.name'
          required
        )
        span.form-control-feedback(
          data-ng-show='form.name.$dirty && form.name.$valid'
        )
          i(class='fa fa-check')
        span.form-control-feedback(
          data-ng-show='form.name.$dirty && form.name.$invalid'
        )
          i(class='fa fa-times')
    .col-md-3(class='col-xs-12')
      .form-group(
        class='has-feedback'
        data-ng-class='{\'has-error\': form.type.$dirty && form.type.$error.required, \'has-success\': form.type.$dirty && form.type.$valid}'
      )
        label.control-label(
          for='{{cdcNodeVm.text.type.name}}'
          data-ng-bind='cdcNodeVm.text.type.label'
          data-ng-show='form.type.$pristine || form.type.$valid'
        )
        label.control-label(
          for='{{cdcNodeVm.text.type.name}}'
          data-ng-bind='cdcNodeVm.text.type.validation.required'
          data-ng-show='form.type.$dirty && form.type.$error.required'
        )
        select.form-control(
          id='{{cdcNodeVm.text.type.name}}'
          name='type'
          data-ng-model='node.type'
          data-ng-options='i.value as i.label for i in cdcNodeVm.text.type.options.items'
          required
        )
          option(
            value=''
            data-ng-bind='cdcNodeVm.text.type.options.default'
            selected
          )
        span.form-control-feedback(
          data-ng-show='form.type.$dirty && form.type.$valid'
        )
          i(class='fa fa-check')
        span.form-control-feedback(
          data-ng-show='form.type.$dirty && form.type.$invalid'
        )
          i(class='fa fa-times')
    .col-md-3(class='col-xs-12')
      .form-group(
        class='has-feedback'
        data-ng-class='{\'has-error\': form.zip.$dirty && (form.zip.$error.required || form.zip.$error.pattern || form.zip.$error.maxlength || form.zip.$error.inexistent), \'has-success\': form.zip.$dirty && form.zip.$valid}'
      )
        label.control-label(
          for='{{cdcNodeVm.text.zip.name}}'
          data-ng-bind='cdcNodeVm.text.zip.label'
          data-ng-show='form.zip.$pristine || form.zip.$valid'
        )
        label.control-label(
          for='{{cdcNodeVm.text.zip.name}}'
          data-ng-bind='cdcNodeVm.text.zip.validation.required'
          data-ng-show='form.zip.$dirty && form.zip.$error.required'
        )
        label.control-label(
          for='{{cdcNodeVm.text.zip.name}}'
          data-ng-bind='cdcNodeVm.text.zip.validation.invalid'
          data-ng-show='form.zip.$dirty && (form.zip.$error.pattern || form.zip.$error.maxlength)'
        )
        label.control-label(
          for='{{cdcNodeVm.text.zip.name}}'
          data-ng-bind='cdcNodeVm.text.zip.validation.inexistent'
          data-ng-show='form.zip.$dirty && form.zip.$error.inexistent'
        )
        input.form-control(
          type='text'
          id='{{cdcNodeVm.text.zip.name}}'
          name='zip'
          placeholder='{{cdcNodeVm.text.zip.placeholder}}'
          maxlength='5'
          size='5'
          data-ng-model='node.zip'
          data-ng-pattern='/\\d{5}/'
          data-ng-maxlength='5'
          data-ng-change='cdcNodeVm.geoZip(node.zip)'
          required
        )
        span.form-control-feedback(
          data-ng-show='form.nodename.$dirty && form.nodename.$valid'
        )
          i(class='fa fa-check')
        span.form-control-feedback(
          data-ng-show='form.nodename.$dirty && form.nodename.$invalid'
        )
          i(class='fa fa-times')
    .col-md-3(class='col-xs-12')
      .form-group(
        class='has-feedback'
        data-ng-class='{\'has-error\': form.state.$dirty && form.state.$error.required, \'has-success\': form.state.$dirty && form.state.$valid}'
      )
        label.control-label(
          for='{{cdcNodeVm.text.state.name}}'
          data-ng-bind='cdcNodeVm.text.state.label'
          data-ng-show='form.state.$pristine || form.state.$valid'
        )
        label.control-label(
          for='{{cdcNodeVm.text.type.name}}'
          data-ng-bind='cdcNodeVm.text.state.validation.required'
          data-ng-show='form.state.$dirty && form.state.$error.required'
        )
        select.form-control(
          id='{{cdcNodeVm.text.state.name}}'
          name='state'
          data-ng-model='node.state'
          data-ng-options='s.name as s.name for s in cdcNodeVm.states'
          data-ng-change='cdcNodeVm.getMunicipalities(node.state)'
          required
        )
          option(
            value=''
            data-ng-bind='cdcNodeVm.text.state.options.default'
            selected
          )
        span.form-control-feedback(
          data-ng-show='form.state.$dirty && form.state.$valid'
        )
          i(class='fa fa-check')
        span.form-control-feedback(
          data-ng-show='form.state.$dirty && form.state.$invalid'
        )
          i(class='fa fa-times')
    .col-md-3(class='col-xs-12')
      .form-group(
        class='has-feedback'
        data-ng-class='{\'has-error\': form.municipality.$dirty && form.municipality.$error.required, \'has-success\': form.municipality.$dirty && form.municipality.$valid}'
      )
        label.control-label(
          for='{{cdcNodeVm.text.municipality.name}}'
          data-ng-bind='cdcNodeVm.text.municipality.label'
          data-ng-show='form.municipality.$pristine || form.municipality.$valid'
        )
        label.control-label(
          for='{{cdcNodeVm.text.type.name}}'
          data-ng-bind='cdcNodeVm.text.municipality.validation.required'
          data-ng-show='form.municipality.$dirty && form.municipality.$error.required'
        )
        select.form-control(
          id='{{cdcNodeVm.text.municipality.name}}'
          name='municipality'
          data-ng-model='node.municipality'
          data-ng-options='m.name as m.name for m in cdcNodeVm.municipalities'
          data-ng-change='cdcNodeVm.getDistricts(node.state, node.municipality)'
          required
        )
          option(
            value=''
            data-ng-bind='cdcNodeVm.text.municipality.options.default'
            selected
          )
        span.form-control-feedback(
          data-ng-show='form.municipality.$dirty && form.municipality.$valid'
        )
          i(class='fa fa-check')
        span.form-control-feedback(
          data-ng-show='form.municipality.$dirty && form.municipality.$invalid'
        )
          i(class='fa fa-times')
    .col-md-3(class='col-xs-12')
      .form-group(
        class='has-feedback'
        data-ng-class='{\'has-error\': form.district.$dirty && form.district.$error.required, \'has-success\': form.district.$dirty && form.district.$valid}'
      )
        label.control-label(
          for='{{cdcNodeVm.text.district.name}}'
          data-ng-bind='cdcNodeVm.text.district.label'
          data-ng-show='form.district.$pristine || form.district.$valid'
        )
        label.control-label(
          for='{{cdcNodeVm.text.type.name}}'
          data-ng-bind='cdcNodeVm.text.district.validation.required'
          data-ng-show='form.district.$dirty && form.district.$error.required'
        )
        select.form-control(
          id='{{cdcNodeVm.text.district.name}}'
          name='district'
          data-ng-model='node.district'
          data-ng-options='s.name as s.name for s in cdcNodeVm.districts'
          data-ng-change='cdcNodeVm.getZip(node.district)'
          required
        )
          option(
            value=''
            data-ng-bind='cdcNodeVm.text.district.options.default'
            selected
          )
        span.form-control-feedback(
          data-ng-show='form.district.$dirty && form.district.$valid'
        )
          i(class='fa fa-check')
        span.form-control-feedback(
          data-ng-show='form.district.$dirty && form.district.$invalid'
        )
          i(class='fa fa-times')
    .col-md-3(class='col-xs-12')
      .form-group(
        class='has-feedback'
        data-ng-class='{\'has-error\': form.street.$dirty && form.street.$error.required, \'has-success\': form.street.$dirty && form.street.$valid}'
      )
        label.control-label(
          for='{{cdcNodeVm.text.street.name}}'
          data-ng-bind='cdcNodeVm.text.street.label'
          data-ng-show='form.street.$pristine || form.street.$valid'
        )
        label.control-label(
          for='{{cdcNodeVm.text.street.name}}'
          data-ng-bind='cdcNodeVm.text.street.validation.required'
          data-ng-show='form.street.$dirty && form.street.$error.required'
        )
        input.form-control(
          type='text'
          id='{{cdcNodeVm.text.street.name}}'
          name='street'
          placeholder='{{cdcNodeVm.text.street.placeholder}}'
          data-ng-model='node.street'
          data-ng-blur='cdcNodeVm.centerMap(node)'
          required
        )
        span.form-control-feedback(
          data-ng-show='form.street.$dirty && form.street.$valid'
        )
          i(class='fa fa-check')
        span.form-control-feedback(
          data-ng-show='form.street.$dirty && form.street.$invalid'
        )
          i(class='fa fa-times')
    .col-md-3(class='col-xs-12')
      .form-group(
        class='has-feedback'
        data-ng-class='{\'has-error\': form.number.$dirty && form.number.$error.required, \'has-success\': form.number.$dirty && form.number.$valid}'
      )
        label.control-label(
          for='{{cdcNodeVm.text.number.name}}'
          data-ng-bind='cdcNodeVm.text.number.label'
          data-ng-show='form.number.$pristine || form.number.$valid'
        )
        label.control-label(
          for='{{cdcNodeVm.text.number.name}}'
          data-ng-bind='cdcNodeVm.text.number.validation.required'
          data-ng-show='form.number.$dirty && form.number.$error.required'
        )
        input.form-control(
          type='text'
          id='{{cdcNodeVm.text.number.name}}'
          name='number'
          placeholder='{{cdcNodeVm.text.number.placeholder}}'
          data-ng-model='node.number'
          data-ng-blur='cdcNodeVm.centerMap(node)'
          required
        )
        span.form-control-feedback(
          data-ng-show='form.number.$dirty && form.number.$valid'
        )
          i(class='fa fa-check')
        span.form-control-feedback(
          data-ng-show='form.number.$dirty && form.number.$invalid'
        )
          i(class='fa fa-times')
    .col-md-3(class='col-xs-12')
      .form-group(
        class='has-feedback'
        data-ng-class='{\'has-error\': form.apt.$dirty && form.apt.$error.required, \'has-success\': form.apt.$dirty && form.apt.$valid}'
      )
        label.control-label(
          for='{{cdcNodeVm.text.apt.name}}'
          data-ng-bind='cdcNodeVm.text.apt.label'
          data-ng-show='form.apt.$pristine || form.apt.$valid'
        )
        input.form-control(
          type='text'
          id='{{cdcNodeVm.text.apt.name}}'
          name='apt'
          placeholder='{{cdcNodeVm.text.apt.placeholder}}'
          data-ng-model='node.apt'
        )
        span.form-control-feedback(
          data-ng-show='form.apt.$dirty && form.apt.$valid'
        )
          i(class='fa fa-check')
        span.form-control-feedback(
          data-ng-show='form.apt.$dirty && form.apt.$invalid'
        )
          i(class='fa fa-times')
    .col-md-3(class='col-xs-12')
      .form-group(
        class='has-feedback'
        data-ng-class='{\'has-error\': form.levels.$dirty && (form.levels.$error.required || form.levels.$error.pattern || form.levels.$error.maxlength), \'has-success\': form.levels.$dirty && form.levels.$valid}'
      )
        label.control-label(
          for='{{cdcNodeVm.text.levels.name}}'
          data-ng-bind='cdcNodeVm.text.levels.label'
          data-ng-show='form.levels.$pristine || form.levels.$valid'
        )
        label.control-label(
          for='{{cdcNodeVm.text.levels.name}}'
          data-ng-bind='cdcNodeVm.text.levels.validation.required'
          data-ng-show='form.levels.$dirty && form.levels.$error.required'
        )
        label.control-label(
          for='{{cdcNodeVm.text.levels.name}}'
          data-ng-bind='cdcNodeVm.text.levels.validation.invalid'
          data-ng-show='form.levels.$dirty && (form.levels.$error.pattern || form.levels.$error.maxlength)'
        )
        input.form-control(
          type='text'
          id='{{cdcNodeVm.text.levels.name}}'
          name='levels'
          placeholder='{{cdcNodeVm.text.levels.placeholder}}'
          maxlength='2'
          size='2'
          data-ng-model='node.levels'
          data-ng-pattern='/\\d{1,2}/'
          data-ng-maxlength='2'
          required
        )
        span.form-control-feedback(
          data-ng-show='form.nodename.$dirty && form.nodename.$valid'
        )
          i(class='fa fa-check')
        span.form-control-feedback(
          data-ng-show='form.nodename.$dirty && form.nodename.$invalid'
        )
          i(class='fa fa-times')
  .row
    .col-md-12
      p
        ui-gmap-google-map(
          center='cdcNodeVm.map.center'
          zoom='cdcNodeVm.map.zoom'
          pan='cdcNodeVm.map.pan'
        )
          ui-gmap-marker(
            coords='cdcNodeVm.marker.coords'
            options='cdcNodeVm.marker.options'
            events='cdcNodeVm.marker.events'
            idkey='cdcNodeVm.marker.id'
          )
